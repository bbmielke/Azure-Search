name = Azure-Search
author = Brian Mielke <bbmielke@gmail.com>
license = Perl_5
copyright_year = 2018
copyright_holder = Brian Mielke

[GithubMeta]
issues = 1
[MetaResources]

; --- Module management
[@Filter]
-bundle = @Basic
; GatherDir must be configured separately
-remove = GatherDir
-remove = Readme

[Readme::Brief]
[ReadmeAnyFromPod]
location = root
filename = README.md
type = markdown

[PodSyntaxTests]
[PodWeaver]
replacer = replace_with_comment
post_code_replacer = replace_with_nothing
[RewriteVersion]
;[CPANFile]
[MetaProvides::Package]
[MetaNoIndex]
[Git::Contributors]
[Test::Compile]

[ExtraTests]
[Test::Perl::Critic]
[PodCoverageTests]

; --- Repository management
[Git::GatherDir]
include_dotfiles = 1
prune_directory = ^eg
; Exclude dotfiles in the root directory
exclude_match = ^\.[^/]+$
; Exclude ini files in the root directory
exclude_match = ^[^/]+\.ini$
; Exclude generated root content, which is included by the various plugins
; Without this, we get an error about duplicate content
exclude_filename = LICENSE
exclude_filename = README.md
exclude_filename = Makefile.PL

[CopyFilesFromBuild]
; Copy generated content to the repository root so users without Dist::Zilla
; can use it
copy = LICENSE
copy = Makefile.PL

; [Run::AfterBuild]
; Add travis and coveralls badges to README.mkdn
; run = perl -pi -e 's{(# SYNOPSIS)}{# STATUS\n\n<a href="https://travis-ci.org/preaction/Log-Any"><img src="https://travis-ci.org/preaction/Log-Any.svg?branch=master"></a><a href="https://coveralls.io/r/preaction/Log-Any"><img src="https://coveralls.io/repos/preaction/Log-Any/badge.png" alt="Coverage Status" /></a>\n\n$1}' README.mkdn

; --- Git management
[CheckChangesHasContent]
changelog = Changes

[Git::Check]
; Automatically commit these files during release
allow_dirty_match = README.*
allow_dirty_match = .*[.]PL
;allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Changes

[Git::Commit / Commit_Dirty_Files]
; Automatically commit with release version and changelog
changelog = Changes
commit_msg = release v%v%n%n%c
allow_dirty_match = README.*
allow_dirty_match = .*[.]PL
;allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Changes
add_files_in = .

[Git::Tag]
changelog = Changes
tag_message = %N v%v - %{yyyy-MM-dd}d%n%n%c

[NextRelease]
filename = Changes

[BumpVersionAfterRelease]

[Git::Commit / Commit_Changes]
commit_msg = incrementing version after release
allow_dirty = Changes
allow_dirty_match = ^lib/.*\.pm$
allow_dirty_match = .*[.]PL
allow_dirty_match = ^bin/

[Git::Push]

[Prereqs]
Mojo::UserAgent = 0
Carp = 0

[Test::ReportPrereqs]
include = Test::More
include = Mojolicious::Lite
include = JSON::PP




